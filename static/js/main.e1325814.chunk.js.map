{"version":3,"sources":["components/Todo.js","actions/actions.js","App.js","reportWebVitals.js","reducers/reducer.js","reducers/index.js","store.js","index.js"],"names":["Todo","getInput","dispatch","useDispatch","state","useSelector","TodosReducer","list","length","className","map","todo","index","data","onClick","id","type","payload","App","useState","input","setInput","editToggle","setEditToggle","editInput","setEditInput","placeholder","value","onChange","e","target","Math","floor","random","AddTodo","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","action","newTodo","filter","ele","updateTodo","console","log","rootReducers","combineReducers","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e1325814.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { DelTodo, RemoveALLTodos } from '../actions/actions'\r\n\r\nfunction Todo({ getInput }) {\r\n    const dispatch = useDispatch();\r\n    const state = useSelector(state => state.TodosReducer.list);\r\n    return (\r\n        <>\r\n            {\r\n                (state.length > 0 ?\r\n                    <div className=\"mt-4\" >\r\n                        <ul className=\"list-group\">\r\n                            {state.map((todo, index) => {\r\n                                return <div key={index} >\r\n                                    <li className=\"text-capitalize list-group-item d-flex justify-content-between align-items-center p-0 ps-3 mb-2\" >\r\n                                        {todo.data}\r\n                                        <div>\r\n                                            <span className=\"btn btn-success me-2\" onClick={() => getInput(todo.id, todo.data)}>Edit</span>\r\n                                            <span className=\"btn btn-danger\" onClick={() => dispatch(DelTodo(todo.id))}>Delete</span>\r\n                                        </div>\r\n                                    </li>\r\n                                </div>\r\n                            })}\r\n                        </ul>\r\n                        <div className=\"btn btn-danger mx-auto d-block mt-5\" onClick={() => dispatch(RemoveALLTodos())}>Remove All</div>\r\n                    </div >\r\n                    :\r\n                    null)\r\n            }\r\n\r\n        </>\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default Todo\r\n","export const AddTodo = (input) => {\r\n    return {\r\n        type: \"ADD_TODO\",\r\n        payload: {\r\n            id: Math.floor(Math.random() * 10000),\r\n            data: input\r\n        }\r\n    }\r\n}\r\n\r\nexport const DelTodo = (id) => {\r\n    return {\r\n        type: \"DELETE_TODO\",\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const UpdateTodo = (id, data) => {\r\n    return {\r\n        type: \"EDIT_TODO\",\r\n        payload: {\r\n            id: id,\r\n            data: data\r\n        }\r\n    }\r\n}\r\n\r\nexport const RemoveALLTodos = () => {\r\n    return {\r\n        type: \"REMOVE_ALL_TODOS\"\r\n    }\r\n}","import React, { useState } from 'react'\nimport './App.css';\nimport Todo from './components/Todo';\n\nimport { AddTodo, UpdateTodo } from './actions/actions'\nimport { useDispatch } from 'react-redux';\n\n\nfunction App() {\n  const [input, setInput] = useState('');\n  const [editToggle, setEditToggle] = useState(true);\n  const [editInput, setEditInput] = useState(null);\n  const dispatch = useDispatch();\n\n  const getInput = (id, input) => {\n    setInput(input);\n    setEditToggle(false);\n    setEditInput(id);\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"container pt-5\">\n        <div className=\"row\">\n          <div className=\"col-sm-6 mx-auto\">\n            <h2 className=\"text-center\"><strong>Todo List React Redux</strong></h2>\n            <div className=\"input-group mt-3\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Enter Text..\" value={input} onChange={(e) => setInput(e.target.value)} />\n              {\n                editToggle\n                  ?\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => dispatch(AddTodo(input), setInput(''))}>Add Todo</button>\n                  :\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={() => dispatch(UpdateTodo(editInput, input), setEditToggle(true), setInput(''))}>Update Todo</button>}\n            </div>\n            <Todo getInput={getInput} />\n          </div>\n        </div>\n      </div>\n    </div >\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n    list: []\r\n}\r\nconst TodosReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case 'ADD_TODO':\r\n            const { id, data } = action.payload;\r\n            return {\r\n                ...state,\r\n                list: [\r\n                    ...state.list,\r\n                    {\r\n                        id: id,\r\n                        data: data\r\n                    }\r\n                ]\r\n            }\r\n\r\n        case 'DELETE_TODO':\r\n            const newTodo = state.list.filter((ele) => {\r\n                return ele.id !== action.payload\r\n            });\r\n            return {\r\n                ...state,\r\n                list: newTodo\r\n            }\r\n        case 'EDIT_TODO':\r\n            const updateTodo = state.list.map((ele) => {\r\n                if (ele.id === action.payload.id) {\r\n                    return { ...ele, data: action.payload.data }\r\n                }\r\n                return ele\r\n            });\r\n            console.log(updateTodo);\r\n            return {\r\n                ...state,\r\n                list: updateTodo\r\n            }\r\n\r\n        case 'REMOVE_ALL_TODOS':\r\n            return {\r\n                list: []\r\n            }\r\n        default: return state;\r\n    }\r\n}\r\nexport default TodosReducer;","import TodosReducer from './reducer'\r\n\r\nimport { combineReducers } from 'redux'\r\n\r\nconst rootReducers = combineReducers({\r\n    TodosReducer\r\n})\r\n\r\nexport default rootReducers;","import { createStore } from 'redux'\r\nimport rootReducers from './reducers/index'\r\n\r\nconst store = createStore(rootReducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}